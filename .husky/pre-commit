#!/usr/bin/env sh
. "$(dirname -- "$0")/_/husky.sh"

# Load direnv environment if available
if command -v direnv > /dev/null; then
  eval "$(direnv export bash 2>/dev/null || true)"
fi

echo "🔍 Running pre-commit checks..."

# Function to check submodule status
check_submodule_status() {
  local submodule_path="$1"
  local submodule_name="$(basename "$1")"

  if [ ! -d "$submodule_path" ]; then
    echo "❌ Error: Submodule directory $submodule_path does not exist"
    return 1
  fi

  cd "$submodule_path" || return 1

  # Check for uncommitted changes
  if ! git diff --quiet || ! git diff --cached --quiet; then
    echo "⚠️  Warning: Submodule $submodule_name has uncommitted changes"
    cd - > /dev/null
    return 1
  fi

  # Check if current commit matches expected
  current_commit=$(git rev-parse HEAD)
  cd - > /dev/null
  expected_commit=$(git ls-tree HEAD "$submodule_path" 2>/dev/null | awk '{print $3}')

  if [ -n "$expected_commit" ] && [ "$current_commit" != "$expected_commit" ]; then
    echo "⚠️  Warning: Submodule $submodule_name commit mismatch"
    echo "   Current:  $current_commit"
    echo "   Expected: $expected_commit"
    echo "   Run 'git add $submodule_path' if this is intentional"
  fi

  return 0
}

# Check workspace health before commit (non-blocking)
echo "🏥 Running workspace health check..."
if command -v npm > /dev/null; then
  npm run workspace:doctor > /dev/null 2>&1 || {
    echo "⚠️  Workspace health issues detected (non-blocking)"
  }
fi

# Check submodules (non-blocking for now due to migration issues)
echo "📦 Validating submodules..."
git submodule status 2>/dev/null | head -5 | while read -r status path commit_info; do
  if [ -d "$path" ]; then
    echo "✓ $path exists"
  else
    echo "⚠️  $path missing (non-blocking during migration)"
  fi
done

# Run lint-staged for code quality
echo "🔧 Running linters and formatters..."
npx lint-staged