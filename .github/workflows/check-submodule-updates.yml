name: Daily Automation

on:
  schedule:
    # Run daily at 6 AM UTC
    - cron: '0 6 * * *'
  workflow_dispatch:
    inputs:
      task:
        description: 'Automation task to run'
        required: true
        default: 'daily'
        type: choice
        options:
          - daily
          - update
          - security
          - health
      force:
        description: 'Force operations even if no changes detected'
        required: false
        default: false
        type: boolean

permissions:
  contents: write
  pull-requests: write

jobs:
  automation:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          submodules: recursive

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Configure Git
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'

      - name: Run automation
        id: automation
        run: |
          TASK="${{ inputs.task || 'daily' }}"
          FORCE_FLAG=""

          if [ "${{ inputs.force }}" = "true" ]; then
            FORCE_FLAG="--force"
          fi

          echo "🤖 Running automation task: $TASK"

          # Run the automation script with output capture
          if npm run automate $TASK $FORCE_FLAG --auto-fix > /tmp/automation.log 2>&1; then
            echo "success=true" >> $GITHUB_OUTPUT
          else
            echo "success=false" >> $GITHUB_OUTPUT
          fi

          # Show the output
          cat /tmp/automation.log

          # Check if changes were made
          if ! git diff --quiet HEAD; then
            echo "changes_made=true" >> $GITHUB_OUTPUT
            echo "changed_files=$(git diff --name-only HEAD | tr '\n' ' ')" >> $GITHUB_OUTPUT
          else
            echo "changes_made=false" >> $GITHUB_OUTPUT
          fi

      - name: Create Pull Request for changes
        if: steps.automation.outputs.changes_made == 'true'
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: |
            🤖 Automated maintenance: ${{ inputs.task || 'daily' }}

            Changed files: ${{ steps.automation.outputs.changed_files }}

            This automated update was generated by the daily maintenance workflow.
          title: "🤖 Automated Maintenance (${{ inputs.task || 'daily' }})"
          body: |
            ## 🤖 Automated Maintenance

            **Task**: ${{ inputs.task || 'daily' }}
            **Trigger**: ${{ github.event_name }}
            **Status**: ${{ (steps.automation.outputs.success == 'true') && '✅ Success' || '❌ Issues Found' }}

            ### 📝 Changes Made
            ```
            ${{ steps.automation.outputs.changed_files }}
            ```

            ### 📋 Automation Log
            <details>
            <summary>View detailed log</summary>

            ```
            $(cat /tmp/automation.log || echo "Log not available")
            ```
            </details>

            ### 🚀 Next Steps
            1. Review the automated changes
            2. Verify that updates are working correctly
            3. Merge this PR to apply the changes

            ---
            *This PR was created automatically by the daily automation workflow.*
          branch: automated/maintenance-${{ github.run_number }}
          delete-branch: true

      - name: Create issue for failures
        if: steps.automation.outputs.success == 'false'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const log = fs.readFileSync('/tmp/automation.log', 'utf8');

            await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: '🚨 Automated Maintenance Failure',
              body: `## 🚨 Automation Failure

            **Task**: ${{ inputs.task || 'daily' }}
            **Time**: ${new Date().toISOString()}
            **Workflow**: ${context.workflow}

            ### 📋 Error Log
            \`\`\`
            ${log}
            \`\`\`

            ### 🔧 Recommended Actions
            1. Check the workflow logs for detailed error information
            2. Run the automation locally: \`npm run automate ${{ inputs.task || 'daily' }}\`
            3. Fix any issues and re-run the workflow
            4. Close this issue once resolved

            ---
            *This issue was created automatically by the automation workflow.*
            `,
              labels: ['automation', 'bug', 'high-priority']
            });

      - name: No changes summary
        if: steps.automation.outputs.changes_made == 'false'
        run: |
          echo "✅ Automation completed successfully with no changes needed"
          echo "Task: ${{ inputs.task || 'daily' }}"
          echo "Everything is up to date and healthy!"
